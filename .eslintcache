[{"/Users/dmitry/projects/serverless/childAssets/src/folderStructure.ts":"1","/Users/dmitry/projects/serverless/childAssets/src/getChilds.ts":"2"},{"size":6551,"mtime":1594729867933,"results":"3","hashOfConfig":"4"},{"size":7194,"mtime":1594649548502,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17vr2nx",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dmitry/projects/serverless/childAssets/src/folderStructure.ts",["10"],"/Users/dmitry/projects/serverless/childAssets/src/getChilds.ts",["11","12"],{"ruleId":"13","severity":1,"message":"14","line":92,"column":25,"nodeType":"15","messageId":"16","endLine":92,"endColumn":28,"suggestions":"17"},{"ruleId":"13","severity":1,"message":"14","line":30,"column":42,"nodeType":"15","messageId":"16","endLine":30,"endColumn":45,"suggestions":"18"},{"ruleId":"13","severity":1,"message":"14","line":47,"column":27,"nodeType":"15","messageId":"16","endLine":47,"endColumn":30,"suggestions":"19"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["20","21"],["22","23"],["24","25"],{"messageId":"26","fix":"27","desc":"28"},{"messageId":"29","fix":"30","desc":"31"},{"messageId":"26","fix":"32","desc":"28"},{"messageId":"29","fix":"33","desc":"31"},{"messageId":"26","fix":"34","desc":"28"},{"messageId":"29","fix":"35","desc":"31"},"suggestUnknown",{"range":"36","text":"37"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"36","text":"38"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"39","text":"37"},{"range":"39","text":"38"},{"range":"40","text":"37"},{"range":"40","text":"38"},[2371,2374],"unknown","never",[897,900],[1289,1292]]
f2686264bb0c640151260103e
