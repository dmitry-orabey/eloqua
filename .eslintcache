[{"/home/developer/work/eloqua/src/folderStructure.ts":"1","/home/developer/work/eloqua/src/getChilds.ts":"2"},{"size":6816,"mtime":1594724521932,"results":"3","hashOfConfig":"4"},{"size":7194,"mtime":1594724521932,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14rdblh",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/developer/work/eloqua/src/folderStructure.ts",[],"/home/developer/work/eloqua/src/getChilds.ts",["10","11"],{"ruleId":"12","severity":1,"message":"13","line":30,"column":42,"nodeType":"14","messageId":"15","endLine":30,"endColumn":45,"suggestions":"16"},{"ruleId":"12","severity":1,"message":"13","line":47,"column":27,"nodeType":"14","messageId":"15","endLine":47,"endColumn":30,"suggestions":"17"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["18","19"],["20","21"],{"messageId":"22","fix":"23","desc":"24"},{"messageId":"25","fix":"26","desc":"27"},{"messageId":"22","fix":"28","desc":"24"},{"messageId":"25","fix":"29","desc":"27"},"suggestUnknown",{"range":"30","text":"31"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"30","text":"32"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"33","text":"31"},{"range":"33","text":"32"},[897,900],"unknown","never",[1289,1292]]